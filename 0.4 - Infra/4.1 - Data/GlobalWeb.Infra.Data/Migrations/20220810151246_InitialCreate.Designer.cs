// <auto-generated />
using System;
using GlobalWeb.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GlobalWeb.Infra.Data.Migrations
{
    [DbContext(typeof(PostgresSQL))]
    [Migration("20220810151246_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GlobalWeb.Infra.Data.Entities.Client", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Document")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Teste",
                            BirthDate = new DateTime(2022, 8, 10, 16, 12, 45, 960, DateTimeKind.Local).AddTicks(6957),
                            DateRegister = new DateTime(2022, 8, 10, 16, 12, 45, 966, DateTimeKind.Local).AddTicks(624),
                            Document = "1111",
                            FullName = "Gabriel Pantoja"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
